#!/bin/sh
#
# $Id: new_irred_with_script,v 1.5 2005/01/08 09:54:30 jon Exp $
#
# Script to classify an irreducible representation, given its script
#
# Inputs
# $1: initial memory
# $2: script to produce the required element
# $3: generator a
# $4: generator b
# $5-: other generators
#
# outputs will be of the form irred/${nor}_${i}_{1,..}
# where nor = znor $a and i is an available unused index
#
#
# Return codes
# 1: error in parameters
# 0: new irreducible
# 254: no nullity one element found
# 255: existing irreducible
#
usage="$0: usage: $0 <memory> <script> <a> <b> [<other generators>]"
if [ $# -lt 4 ]; then
  echo "$usage"
  exit 1;
fi
. functions
memory=$1
script=$2
a=$3
b=$4
if [ -e $a -a -e $b ]; then
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znor $b` -o $nor -ne `znoc $b` ]; then
    echo $a and $b are not compatible
    exit 1
  fi
else
  echo "$0: missing files $a or $b"
  exit 1
fi
let j=$#-2
i=0
shift 2
args=
while [ $i -lt $j ]; do
  let i=$i+1
  args="$args $1"
  shift
done
#
# Now generate element of nullity one
#
tmp=tmp${PPID}
e=${tmp}.1
name=${tmp}_${nor}
zscript -m $memory $e zscript.${tmp} $script $args
ret=$?
rm zscript.${tmp}*
if [ 0 -eq $ret ]; then
# Find the nullspace. Accept values greater than 1
  ok=0
  while [ $ok -eq 0 ]; do
    nullity=`zns -m $memory $e ${tmp}.2 2>&1`
    ret=$?
    if [ $ret -eq 0 ]; then
      ok=1
    elif [ $ret -eq 2 ]; then
      let memory=`more_memory $memory 2>/dev/null`
    else
      rm -f ${tmp}*
      echo $nullity
      exit 1
    fi
  done
  if [ 0 -eq $nullity ]; then
    echo "Unexpected result, nullity $nullity when expected > 0"
    rm -f ${tmp}*
    exit 254
  fi
  zsel ${tmp}.2 ${tmp}.2.0 0
  ret=$?
  if [ $ret -ne 0 ]; then
    rm -f ${tmp}*
    exit 1
  fi
  x=`base_from_vector ${tmp}.2.0 ${name}_sb $memory ${tmp}.3 ${args}`
  ret=$?
  if [ $ret -ne 0 ]; then
    echo $x
    rm -f ${tmp}*
    exit 1
  fi
else
  rm -f ${tmp}.*
  exit $ret
fi
if [ ! -e irreds ]; then
  mkdir irreds
fi
names=`ls irreds/${nor}_*_1 2>/dev/null`
ret=$?
if [ $ret -eq 0 ]; then
# echo Found some irreducibles
# Some irreds of this dimension
  for x in $names; do
    y=`echo $x | sed -e "s/_1$//g"`
    eq=1
    i=1;
    while [ $i -le $j ]; do
      if [ -e ${y}_$i ]; then
        if zdiff ${y}_$i ${name}_sb_$i 1>/dev/null; then
          eq=1
        else
          eq=0
          break
        fi
      else
        eq=0
        break
      fi
      let i=$i+1
    done
    if [ 1 -eq $eq ] ; then
      echo Existing irreducible ${y} found
      rm -f ${tmp}*
      exit 255
    fi
  done
fi
#
# New irreducible found
#
new_name=`new_irred_name irreds/${nor}`
echo Found a new irreducible ${new_name} of dimension ${nor} using script $script
#echo assigning new name ${new_name}
i=1
while [ $i -le $j ]; do
  mv ${name}_sb_$i ${new_name}_$i
  let i=$i+1
done
if [ -e ${new_name}_1_${script} -o -L ${new_name}_1_${script} ]; then
  rm ${new_name}_1_${script}
fi
ln -s ${new_name}_1 ${new_name}_1_${script}
rm -f ${tmp}*
exit 0
