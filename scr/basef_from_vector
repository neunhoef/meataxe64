#!/bin/sh
#
# $Id: basef_from_vector,v 1.1 2002/07/04 17:56:46 jon Exp $
#
# Script to find a representation in standard base, given a vector
#
# Inputs
# $1: vector with which to split
# $2: generator a
# $3: generator b
# $4: output filename base
# $5: the standard basis
# $6: temporary directory
# $7: memory
#
# outputs will be of the form <$4>_sb_{1,2}
# where nor is number of rows, and q is the prime power
#
#
# Return codes
# 1: error in parameters
# 0: success
# 254: reducible
#
#set -v
. functions
usage="$0: usage: $0 <e> <a> <b> <output_stem> <s> <tmp dir> <memory>"
if [ $# -ne 7 ]; then
  echo $usage
  exit 1;
fi
e=$1
a=$2
b=$3
o=$4
s=$5
dir=$6
memory=$7
if [ -e $e -a -e $a -a -e $b ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znor $b` -o $nor -ne `znoc $b` ]; then
    echo "$0: $a and $b are not compatible"
    exit 1
  fi
  if [ $noc -ne `znoc $e` ]; then
    echo "$0: $a and $e are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $e, $a or $b"
  exit 1
fi
tmp=tmp${PPID}
basef_with_vector $e $a $b $s $dir $memory
ret=$?
if [ 0 -ne $ret ]; then
  rm -f ${tmp}*
  exit $ret
fi
conjugatef $s ${o} $dir $memory $a $b
ret=$?
rm -f ${tmp}*
exit $ret
