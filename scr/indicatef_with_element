#!/bin/sh
#
# $Id: indicatef_with_element,v 1.7 2002/09/23 13:42:43 jon Exp $
#
# Script to find the indicator of an irreducible representation
# Assumes a and b in standard base form
#
# Inputs
# $1: element to use to get null vector
# $2: script used to create null element
# $3: initial memory
# $4: temporary directory
# $5: generator a
# $6: generator a in dual representation
# $7: generator b
# $8: generator b in dual representation
# $9-: other generators and duals
#
# Return codes
# 1: error in parameters
# 0: ok
#
usage="$0: usage: $0 <e> <script> <memory> <tmp directory> <a> <a dual> <b> <b dual> [<other generators and duals>]"
if [ $# -lt 8 ]; then
  echo "$usage"
  exit 1;
fi
. functions
e=$1
script=$2
memory=$3
tmp_dir=$4
a=$5
b=$7
a_d=$6
b_d=$8
if [ -e $a -a -e $b -a -e $e -a -e $a_d -a -e $b_d ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znor $b` -o $nor -ne `znoc $b` -o $nor -ne `znor $e` -o $nor -ne `znoc $e` -o $nor -ne `znor $a_d` -o $nor -ne `znoc $a_d` -o $nor -ne `znor $b_d` -o $nor -ne `znoc $b_d` ]; then
    echo "$0: $a, $b, $e, $a_d, $b_d are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $a, $b or $e"
  exit 1
fi
tmp=tmp${PPID}
S=${tmp}.3
Q=${tmp}.4
sb=${tmp}.0
shift 4
line=
d_line=
while [ $# -gt 0 ]; do
  if [ 1 -eq $# ]; then
    rm -f ${tmp}.*
    echo "$usage"
    exit 1;
  fi
  line="$line $1"
  d_line="$d_line $2"
  shift 2
done
x=`basef_vectors $e $S ${tmp_dir} $memory $d_line`
ret=$?
if [ $ret -eq 0 ]; then
  real_indicate $S $memory $line
  ret=$?
  rm -f ${tmp}.*
  exit $ret
elif [ $ret -ne 255 ]; then
  echo basef return $ret, terminating
  rm -f ${tmp}.*
  exit 1
else
  rm -f ${tmp}.*
  if [ -e ${a}_o -o -L ${a}_o ]; then
    rm ${a}_o
  fi
  ln -s $a ${a}_o
  echo indicator o
fi
