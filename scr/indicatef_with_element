#!/bin/sh
#
# $Id: indicatef_with_element,v 1.5 2002/09/11 21:20:47 jon Exp $
#
# Script to find the indicator of an irreducible representation
# Assumes a and b in standard base form
#
# Inputs
# $1: generator a
# $2: generator b
# $3: element to use to get null vector
# $4: generator a in dual representation
# $5: generator b in dual representation
# $6: script used to create null element
# $7: temporary directory
# $8: initial memory (optional)
#
# Return codes
# 1: error in parameters
# 0: ok
#
usage="$0: usage: $0 <a> <b> <e> <a dual> <b dual> <script> <tmp directory> [<memory>]"
if [ $# -ne 7 -a $# -ne 8 ]; then
  echo "$usage"
  exit 1;
fi
. functions
a=$1
b=$2
a_d=$4
b_d=$5
e=$3
script=$6
if [ -e $a -a -e $b -a -e $e -a -e $a_d -a -e $b_d ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znor $b` -o $nor -ne `znoc $b` -o $nor -ne `znor $e` -o $nor -ne `znoc $e` -o $nor -ne `znor $a_d` -o $nor -ne `znoc $a_d` -o $nor -ne `znor $b_d` -o $nor -ne `znoc $b_d` ]; then
    echo "$0: $a, $b, $e, $a_d, $b_d are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $a, $b or $e"
  exit 1
fi
if [ $# -eq 8 ]; then
  memory=$8
else
  memory=200
fi
tmp_dir=$7
tmp=tmp${PPID}
S=${tmp}.3
Q=${tmp}.4
sb=${tmp}.0
x=`basef_vectors $e $S ${tmp_dir} $memory $a_d $b_d`
ret=$?
if [ $ret -eq 0 ]; then
  real_indicate $a $b $S $memory
  ret=$?
  rm -f ${tmp}.*
  exit $ret
elif [ $ret -ne 255 ]; then
  echo basef return $ret, terminating
  rm -f ${tmp}.*
  exit 1
else
  rm -f ${tmp}.*
  if [ -e ${a}_o -o -L ${a}_o ]; then
    rm ${a}_o
  fi
  ln -s $a ${a}_o
  echo indicator o
fi
