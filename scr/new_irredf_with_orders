#!/bin/sh
#
# $Id: new_irredf_with_orders,v 1.3 2002/06/25 10:30:12 jon Exp $
#
# Script to classify an irreducible representation
# using intermediate files
#
# Inputs
# $1: generator a
# $2: generator b
# $3: order a
# $4: order b
# $5: temporary directory
# $6: initial memory (optional)
#
# outputs will be of the form irred/${nor}_${i}_{1,2}
# where nor = znor $a and i is an available unused index
#
#
# Return codes
# 1: error in parameters
# 0: new irreducible
# 254: no nullity one element found
# 255: existing irreducible
#
usage="$0: usage: $0 <a> <b> <order a> <order b> <tmp directory> [<memory>]"
if [ $# -ne 5 -a $# -ne 6 ]; then
  echo $usage
  exit 1;
fi
. functions
a=$1
b=$2
o_a=$3
o_b=$4
tmp_dir=$5
if [ -e $a -a -e $b ]; then
  q=`zprime $a`
  r=`zprime $b`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znor $b` -o $nor -ne `znoc $b` ]; then
    echo "$0: $a and $b are not compatible"
    exit 1
  fi
  if [ 1 -eq $q -a 1 -eq $r ]; then
    echo "$0: representation on two maps cannot be irreducible"
    exit 1
  fi
  if [ 1 -ne $q -a 1 -ne $r -a $q -ne $r ]; then
    echo "$0: $a and $b are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $a or $b"
  exit 1
fi
if [ $# -eq 6 ]; then
  memory=$6
else
  memory=200
fi
#
# Now search for element of nullity one
#
tmp=tmp${PPID}
e=${tmp}.1
script=`find_nullity_one_with_orders $a $b $e $o_a $o_b $memory`
ret=$?
if [ $ret -ne 0 ]; then
  rm -f ${tmp}.*
  echo $script
  exit $ret
fi
name=${tmp}_${nor}
basef $e $a $b ${name} ${tmp}.0 ${tmp_dir} ${memory}
ret=$?
if [ $ret -ne 0 ]; then
  echo basef returns $ret, terminating
  rm -f ${tmp}*
  exit 1
fi
if [ ! -e irreds ]; then
  mkdir irreds
fi
names=`ls irreds/${nor}_*_1 2>/dev/null`
ret=$?
if [ $ret -eq 0 ]; then
# echo Found some irreducibles
# Some irreds of this dimension
  for x in $names; do
    y=`echo $x | sed -e "s/_1$//g"`
    if zdiff ${y}_1 ${name}_sb_1 1>/dev/null; then
      if zdiff ${y}_2 ${name}_sb_2 1>/dev/null; then
        echo Existing irreducible ${y} found
        rm -f ${tmp}*
        exit 255
      fi
    fi
  done
fi
#
# New irreducible found
#
echo Found a new irreducible of dimension ${nor} using script $script
new_name=`new_irred_name irreds/${nor}`
#echo assigning new name ${new_name}
mv ${name}_sb_1 ${new_name}_1
mv ${name}_sb_2 ${new_name}_2
if [ -e ${new_name}_1_${script} -o -L ${new_name}_1_${script} ]; then
  rm ${new_name}_1_${script}
fi
ln -s ${new_name}_1 ${new_name}_1_${script}
rm -f ${tmp}*
exit 0
