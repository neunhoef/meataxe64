#!/bin/sh
#
# $Id: real_indicate,v 1.3 2002/09/11 22:53:15 jon Exp $
#
# Script to find the indicator of an irreducible representation
# assuming it is real, and we have the standard basis conjugating
# the dual back to the original
#
# Inputs
# $1: the standard basis for the dual
# $2: initial memory
# $3: generator a
# $4: generator b
# $5-: other generators
#
# Return codes
# 1: error in parameters
# 0: ok
#
usage="$0: usage: $0 <sb> <memory> <a> <b> [<other generators>]"
if [ $# -lt 4 ]; then
  echo "$usage"
  exit 1;
fi
. functions
S=$1
memory=$2
a=$3
b=$4
shift 2
if [ -e $a -a -e $b -a -e $S ]; then
  nor=`znor $a`
  if [ $nor -ne `znoc $a` ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znor $b` -o $nor -ne `znoc $b` -o $nor -ne `znor $S` -o $nor -ne `znoc $S` ]; then
    echo "$0: $a, $b, $S are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $a, $b or $S"
  exit 1
fi
tmp=tmp${PPID}
Q=${tmp}.4
if [ $nor -eq 1 ]; then
  echo indicator +
  rm -f ${tmp}.*
  if [ -e ${a}_+ -o -L ${a}_+ ]; then
    rm ${a}_+
  fi
  ln -s $a ${a}_+
  exit 0
fi
zqf $S $Q
i=0
q=`zprime $a`
while [ $i -lt $q ]; do
  zsid $q $nor $nor $i ${tmp}.7
  zad $Q ${tmp}.7 ${tmp}.8
  ind=1
  for x in $*; do
    preserves ${tmp}.8 $S ${tmp}.7 $x $i $memory
    ret=$?
    if [ 1 -eq $ret ]; then
      rm -f ${tmp}.*
      exit 1
    elif [ 254 -eq $ret ]; then
      echo indicator o
      rm -f ${tmp}.*
      if [ -e ${a}_o -o -L ${a}_o ]; then
        rm ${a}_o
      fi
      ln -s $a ${a}_o
      exit 0
    elif [ 0 -ne $ret ]; then
      ind=0
      break
    fi
  done
  if [ 1 -eq $ind ]; then
    echo indicator +
    rm -f ${tmp}.*
    if [ -e ${a}_+ -o -L ${a}_+ ]; then
      rm ${a}_+
    fi
    ln -s $a ${a}_+
    exit 0
  fi
# Try next diagonal
  let i=$i+1
done
echo indicator -
rm -f ${tmp}.*
if [ -e ${a}_- -o -L ${a}_- ]; then
  rm ${a}_-
fi
ln -s $a ${a}_-
exit 0
