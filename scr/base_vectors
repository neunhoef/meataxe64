#!/bin/sh
#
# $Id: base_vectors,v 1.6 2002/11/29 19:19:01 jon Exp $
#
# Script to find a standard base for a representation
#
# Inputs
# $1: element with which to split
# $2: the standard basis
# $3: generator a
# $4-: other generators
#
#
#
# Return codes
# 1: error in parameters
# 0: success
# 254: reducible
# 255: nullity not 1
#
#set -v
. functions
usage="$0: usage: $0 <e> <s> <a>  [<other generators>*]"
if [ $# -lt 4 ]; then
  echo "$usage"
  exit 1;
fi
e=$1
s=$2
a=$3
if [ -e $e -a -e $a ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znoc $e` -o $nor -ne `znor $e` ]; then
    echo "$0: $a and $e are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $e or $a"
  exit 1
fi
tmp=tmp${PPID}
memory=200
ok=0
shift 3
while [ $ok -eq 0 ]; do
  nullity=`zns -m $memory $e ${tmp}.0 2>&1`
  ret=$?
  if [ $ret -eq 0 ]; then
    ok=1
  elif [ $ret -eq 2 ]; then
    let memory=`more_memory $memory 2>/dev/null`
  else
    echo $nullity
    rm -f ${tmp}*
    exit 1
  fi
done
if [ 1 -ne $nullity ]; then
  echo "$e has nullity $nullity different from 1"
  rm -f ${tmp}*
  exit 255
fi
base_with_vector ${tmp}.0 $s $memory $a $*
ret=$?
rm -f ${tmp}*
exit $ret
