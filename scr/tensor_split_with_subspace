#!/bin/sh
#
# $Id: tensor_split_with_subspace,v 1.2 2002/09/11 21:20:47 jon Exp $
#
# Script to split a representation given a particular subspace to work from
# where the group generators are tensor products
#
# Inputs
# $1: generator a
# $2: generator a (left tensor)
# $3: generator a (right tensor)
# $4: subspace with which to split
# $5: output subspace representation filename
# $6: output quotient representation filename
# $7: initial memory (optional)
#
# outputs will be of the form <$3>_<q>_<nor>
# where nor is number of rows, and q is the prime power
#
#
# Return codes
# 1: error in parameters
# 0: success
# 254: did not split
#
. functions
usage="$0: usage: $0 <a> <s> <a_l> <a_r> <o_s> <o_q> [<memory>]"
if [ $# -ne 6 -a $# -ne 7 ]; then
  echo "$usage"
  exit 1;
fi
a=$1
s=$2
a_l=$3
a_r=$4
o_s=$5
o_q=$6
if [ $# -eq 7 ]; then
  memory=$7
else
  memory=200
fi
if [ -e $a -a -e $s ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $noc -ne `znoc $s` -o \( $q -ne `zprime $s` -a 1 -ne $q \) ]; then
    echo "$0: $a and $s are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $a or $s"
  exit 1
fi
tmp=tmp${PPID}
mem_ok=0
dim=`znor $s`
let codim=$nor-$dim
if [ $dim -lt $nor ]; then
  ztmu $s $a_l $a_r ${tmp}.0 $memory 1>/dev/null
  zss $s ${tmp}.0 ${o_s} $memory
  zqs $s $a ${o_q} $memory
  rm -f ${tmp}.0
exit 0
else
  echo failed to split
  exit 254
fi
