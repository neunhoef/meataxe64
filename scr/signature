#!/bin/sh
#
# $Id: signature,v 1.7 2002/09/11 21:20:47 jon Exp $
#
# Script to give a signature for a representation
#
# Inputs
# $1: generator a
# $2: generator b
#
# outputs will be of the form <$3>_<q>_<nor>_{1,2}
# where nor is number of rows, and q is the prime power
#
#
# Return codes
# 1: error in parameters
# 0: success
. functions
usage="$0: usage: $0 <a> <b>"
if [ $# -ne 2 ]; then
  echo "$usage"
  exit 1;
fi
a=$1
b=$2
if [ -e $a -a -e $b ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znor $b` -o $nor -ne `znoc $b` ]; then
    echo "$0: $a and $b are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $a or $b"
  exit 1
fi
id=id_${q}_$nor
if [ ! -e $id ]; then
  echo Creating id
  zid $q $nor $nor $id
fi
#
# Now look for something with nullity
#
memory=200
tmp=tmp${PPID}
rm -f ${tmp}*
for i in 1 2 3 4 5 6 7 8 9 10; do
  echo -n "f$i "
  f$i $id $a $b ${tmp}.1 ${tmp}.1 1>/dev/null
  if [ $? -ne 0 ]; then
    exit 1
  fi
  ok=0
  while [ $ok -eq 0 ]; do
    zrn ${tmp}.1 $memory 2> /dev/null
    ret=$?
    if [ $ret -eq 2 ]; then
      let memory=`more_memory $memory`
    elif [ $ret -ne 0 ]; then
      exit 1
    else
      ok=1
    fi
  done
done
rm -f ${tmp}*
exit 0
