#
# $Id: split,v 1.3 2002/01/14 23:43:45 jon Exp $
#
# Script to split a representation
#
# Inputs
# $1: generator a
# $2: generator b
# $3: output filename base
#
# outputs will be of the form <$3>_<q>_<nor>_{1,2}
# where nor is number of rows, and q is the prime power
#
#
# Return codes
# 1: error in parameters
# 0: success
# 252: ran out of possible splitters
# 254: failed to split
# 255: irreducible
#
#set -v
usage="$0: usage: $0 <a> <b> <output_stem>"
if [ $# -ne 3 ]; then
  echo $usage
  exit 1;
fi
a=$1
b=$2
o=$3
if [ -e $a -a -e $b ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znor $b` -o $nor -ne `znoc $b` ]; then
    echo "$0: $a and $b are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $a or $b"
  exit 1
fi
id=id_${q}_$nor
if [ ! -e $id ]; then
  echo Creating id
  zid $q $nor $nor $id
fi
#
# Now look for something with nullity
#
tmp=tmp${PPID}
#
# Try 1 + a + b
#
for i in 1 2 3 4 5 6 7 8 9 10; do
  echo using f$i to split
  f$i $id $a $b ${tmp}.1 ${tmp}.1
  if [ $? -ne 0 ]; then
    exit 1
  fi
  split_with_element $a $b ${tmp}.1 $o 0
  ret=$?
  if [ $ret -eq 255 -o $ret -eq 0 ]; then
    rm -f tmp*
    exit $ret
  fi
done
rm -f tmp*
exit 252
