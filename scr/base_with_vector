#!/bin/sh
#
# $Id: base_with_vector,v 1.7 2002/09/11 21:20:47 jon Exp $
#
# Script to find a standard base for a representation, given a vector
#
# Inputs
# $1: vector with which to split
# $2: the standard basis
# $3: memory
# $4: generator a
# $5-: other generators
#
#
#
# Return codes
# 1: error in parameters
# 0: success
# 254: reducible
#
#set -v
. functions
usage="$0: usage: $0 <e> <s> <memory> <a> [<other generators>*]"
if [ $# -lt 5 ]; then
  echo "$usage"
  exit 1;
fi
e=$1
s=$2
memory=$3
a=$4
if [ -e $e -a -e $a ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $noc -ne `znoc $e` -o 1 -ne `znor $e` ]; then
    echo "$0: $a and $e are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $e or $a"
  exit 1
fi
ok=0
shift 4
while [ 0 -eq $ok ]; do
  dim=`zmsb $e $s $memory $a $*`
  ret=$?
  if [ 0 -eq $ret ]; then
    if [ $dim -eq $nor ]; then
      ok=1
    else
      echo Strange result from zmsb giving wrong dimension $dim vs $nor
      exit 1
    fi
  elif [ $ret -eq 2 ]; then
    let memory=`more_memory $memory`
  else
    echo zmsb unexpectedly returns $ret
    exit 1
  fi
done
exit 0
