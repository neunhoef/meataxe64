#!/bin/sh
#
# $Id: basef_vectors,v 1.3 2002/07/04 17:56:46 jon Exp $
#
# Script to find a representation in standard base
# using intermediate files
#
# Inputs
# $1: element with which to split
# $2: generator a
# $3: generator b
# $4: the standard basis
# $5: temporary directory to be used
# $6: memory (optional)
#
#
#
# Return codes
# 1: error in parameters
# 0: success
# 255: nullity not 1
#
#set -v
. functions
usage="$0: usage: $0 <e> <a> <b> <output_stem> <s> <tmp directory> [<memory>]"
if [ $# -ne 6 -a $# -ne 7 ]; then
  echo $usage
  exit 1;
fi
e=$1
a=$2
b=$3
s=$4
dir=$5
if [ 6 -eq $# ]; then
  memory=$6
else
  memory=200
fi
if [ -e $e -a -e $a -a -e $b ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znor $b` -o $nor -ne `znoc $b` ]; then
    echo "$0: $a and $b are not compatible"
    exit 1
  fi
  if [ $nor -ne `znoc $e` -o $nor -ne `znor $e` ]; then
    echo "$0: $a and $e are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $e, $a or $b"
  exit 1
fi
tmp=tmp${PPID}
ok=0
nullity=`znsf $e ${tmp}.0 $dir $memory`
ret=$?
if [ 0 -ne $ret ]; then
  rm -f ${tmp}*
  exit 1
fi
if [ 1 -ne $nullity ]; then
  echo "$e has nullity $nullity different from 1"
  rm -f ${tmp}*
  exit 255
fi
basef_with_vector ${tmp}.0 $a $b $s $dir $memory
ret=$?
rm -f ${tmp}*
exit $ret
