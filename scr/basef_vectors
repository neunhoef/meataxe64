#!/bin/sh
#
# $Id: basef_vectors,v 1.4 2002/07/07 18:25:44 jon Exp $
#
# Script to find a representation in standard base
# using intermediate files
#
# Inputs
# $1: element with which to split
# $2: the standard basis
# $3: temporary directory to be used
# $4: memory
# $5: generator a
# $6-: other generators
#
#
#
# Return codes
# 1: error in parameters
# 0: success
# 255: nullity not 1
#
#set -v
. functions
usage="$0: usage: $0 <e> <s> <tmp directory> <memory> <a> <b>"
if [ $# -lt 6 ]; then
  echo $usage
  exit 1;
fi
e=$1
s=$2
dir=$3
memory=$4
a=$5
if [ -e $e -a -e $a ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znoc $e` -o $nor -ne `znor $e` ]; then
    echo "$0: $a and $e are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $e or $a"
  exit 1
fi
tmp=tmp${PPID}
ok=0
nullity=`znsf $e ${tmp}.0 $dir $memory`
ret=$?
if [ 0 -ne $ret ]; then
  rm -f ${tmp}*
  exit 1
fi
if [ 1 -ne $nullity ]; then
  echo "$e has nullity $nullity different from 1"
  rm -f ${tmp}*
  exit 255
fi
shift 5
basef_with_vector ${tmp}.0 $s $dir $memory $a $*
ret=$?
rm -f ${tmp}*
exit $ret
