#!/bin/sh
#
# $Id: indicatef_with_script,v 1.3 2002/06/30 21:33:15 jon Exp $
#
# Script to find the indicator of an irreducible representation,
# given a script describing the null generator
# Assumes a and b in standard base form
#
# Inputs
# $1: generator a
# $2: generator b
# $3: script for finding standard base generator
# $4: order a
# $5: order b
# $6: temporary directory
# $7: initial memory (optional)
#
# Return codes
# 1: error in parameters
# 0: ok
#
usage="$0: usage: $0 <a> <b> <script> <order a> <order b> <tmp directory> [<memory>]"
if [ $# -ne 6 -a $# -ne 7 ]; then
  echo $usage
  exit 1;
fi
. functions
a=$1
b=$2
o_a=$4
o_b=$5
script=$3
if [ -e $a -a -e $b ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znor $b` -o $nor -ne `znoc $b` ]; then
    echo "$0: $a and $b are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $a or $b"
  exit 1
fi
if [ $# -eq 7 ]; then
  memory=$7
else
  memory=200
fi
tmp_dir=$6
tmp=tmp${PPID}
a_d=${tmp}.0
b_d=${tmp}.1
dual_with_order $a $a_d $o_a $memory
dual_with_order $b $b_d $o_b $memory
e=${tmp}.2
ok=0
while [ $ok -eq 0 ]; do
  zscript $a_d $b_d $e ${tmp}zscript $script $memory
  ret=$?
  if [ $ret -eq 2 ]; then
    let memory=`more_memory $memory`
  elif [ $ret -ne 0 ]; then
    echo zscript failed
    rm -f ${tmp}.*
    exit $ret
  else
    ok=1
  fi
done
rm ${tmp}zscript*
indicatef_with_element $a $b $e $a_d $b_d $script $tmp_dir $memory
ret=$?
rm -f ${tmp}.*
exit $ret
