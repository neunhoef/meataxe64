#!/bin/sh
#
# $Id: rip_rank,v 1.4 2002/10/13 20:07:20 jon Exp $: irred,v 1.4 2002/01/26 00:36:06 jon Exp $
#
# Script to compute the rank of a rip off element on a representation
#
# Inputs
# $1: generator a
# $2: generator b
# $3: order of AB
# $4: output element
#
# Return codes
# 1: error in parameters
# 0: ok
. functions
usage="$0: usage: $0 <a> <b> <order> <output>"
if [ $# -ne 4 ]; then
  echo "$usage"
  exit 1;
fi
a=$1
b=$2
order=$3
o=$4
if [ -e $a -a -e $b ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
  if [ $nor -ne `znor $b` -o $nor -ne `znoc $b` ]; then
    echo "$0: $a and $b are not compatible"
    exit 1
  fi
else
  echo "$0: missing files $a or $b"
  exit 1
fi
tmp=tmp${PPID}
#echo Using tmp stem $tmp
zid $q $nor $nor ${tmp}.0
ret=$?
if [ 0 -ne $ret ]; then
  rm -f ${tmp}*
  exit $ret
fi
zmu $a $b ${tmp}.1
ret=$?
if [ 0 -ne $ret ]; then
  rm -f ${tmp}*
  exit $ret
fi
x=1
y=2
while [ $y -lt $order ]; do
  zmu ${tmp}.$x ${tmp}.1 ${tmp}.$y
  ret=$?
  if [ 0 -ne $ret ]; then
    rm -f ${tmp}*
    exit $ret
  fi
  let x=$x+1
  let y=$y+1
done
ln -s ${tmp}.0 ${tmp}.ad.0
x=0
y=1
while [ $y -lt $order ]; do
  zad ${tmp}.ad.$x ${tmp}.$y ${tmp}.ad.$y
  if [ 0 -ne $ret ]; then
    rm -f ${tmp}*
    exit $ret
  fi
  let x=$x+1
  let y=$y+1
done
let x=$order-1
memory=200
ok=0
while [ $ok -eq 0 ]; do
  rank=`zrn -m $memory ${tmp}.ad.$x 2>/dev/null`
  ret=$?
  if [ 0 -eq $ret ]; then
    mv ${tmp}.ad.$x $o
    rm -f ${tmp}*
    echo $a: $rank
    exit $ret
  elif [ 2 -ne $ret ]; then
    rm -f ${tmp}*
    exit $ret
  fi
  let memory=`more_memory $memory`
done
