This is the "Arizona" release dated 1.3.2018.

It has no known bugs.

Installation.

The entire directory structure must be place in a directory, whose name
does not matter (I will presume "mtx64" in this readme) but the subdirectories
jif bin src src2 reg test are all of some importance.
The shell-scripts run in "bash".

Before compiling, you probably need to edit mtx64/src/tuning.h to set the
amount of memory (in megabytes) the number of threads.  maxchops is
probably OK at 25, at least for now.

A reasonable way to get things going is

bash
cd mtx64/test
source go
makl
compa
comp2 (maybe - see below)

You might follow that with a validation run for confidence.
val2 (which should run for a few minutes and produce no output)

Generally the programs have names beginning with a z and can be run
directly.  I find it easier to use a few shell-scripts for chopping and if
you want to use them, the conventions I use are that the current representation
is generated by a1 a2 ..., the element of the algebra I take the nullspace
of is af, I put the nullspace in an.  Or you can design your own for your
own purposes.

The fast primes are 2-193, and quadratic and cubic extensions of fast primes
are fast, as are {81,243,16,32,64,128,256,625}

The type of machine is tested at run-time, but megabytes and threads are
still compiled in (at the moment).

It includes at full speed all the main functions needed for ordinary meataxe
work of chopping up, Norton irreducibility, etc. but nothing sophisticated.

One exception is the determinant function, which is work in progress.  At
present the best is zde2 (in src2 - compile with comp2) which is single
core and needlessly back-cleans, but works.

Please see the document "arizona.odt" for more details.

Richard Parker 1.3.2018
