#!/bin/bash
#
# $Id: dual,v 1.13 2023/07/03 08:30:07 jon Exp $
#
# Script to dual of a matrix
#
# Inputs
# $1: matrix
# $2: out
# $3: memory (optional)
#
# Return codes
# 1: error in parameters
# 0: success
#
#set -v
. functions
usage="$0: usage: $0 <in> <out> [<memory>]"
if [ $# -ne 2 -a $# -ne 3 ]; then
  echo "$usage"
  exit 1;
fi
a=$1
o=$2
if [ -e $a ]; then
  q=`zprime $a`
  nor=`znor $a`
  noc=`znoc $a`
  if [ $nor -ne $noc ]; then
    echo "$0: $a is not square"
    exit 1
  fi
else
  echo "$0: missing file $a"
  exit 1
fi
if [ $# -eq 2 ]; then
  memory=200000
else
  memory=$3
fi
tmp=tmp${PPID}
tr=${tmp}.0
ztr -m $memory $a ${tr}
ret=$?
if [ 0 -ne $ret ]; then
  rm -f ${tmp}*
  exit $ret
fi
ok=0
while [ 0 -eq $ok ]; do
  ziv -m $memory ${tr} $o 2>/dev/null
  ret=$?
  if [ 2 -eq $ret ]; then
    let memory=`more_memory $memory`
  elif [ 0 -ne $ret ]; then
    echo ziv unexpectedly returns $ret
    rm -f ${tmp}*
    exit $ret
  else
    rm -f ${tmp}*
    exit $ret
  fi  
done
